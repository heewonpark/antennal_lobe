/*
num_spike : number of spikes
*/
objref ic
soma ic = new IClamp(1.0)
obfunc setStimVector(){local stoptime, timestep, i, j, num_spike, flg, stim_on,start_time, length, amp, L_RATIO,A_RATIO  localobj tvec, stim_flg, rand, datafile,spiketiming
    ic.delay = 0
    ic.dur = 1e9
    stoptime = $1
    timestep = $2
    span = stoptime/timestep
    
    print "span ",span
    
    L_RATIO = 2.0
    A_RATIO = 0.3
    amp = 15
    length = 0.5
    tvec = new Vector(span)
    for i=0,span -1 {
	tvec.x[i] = timestep * i
    }
    stim_flg = new Vector(span,0)
    spiketiming = new Vector()
    datafile = new File()
    strdef filename
    sprint(filename,"spiketiming0.dat")
    datafile.ropen(filename)
  
    while(!datafile.eof()){
	spiketiming.append(datafile.scanvar()-6.0)
    }
    spiketiming.remove(spiketiming.size()-1)
    num_spike = spiketiming.size()
        
    print "spiketiming "
    print spiketiming
    spiketiming.printf("%5.8f\n")
    datafile.close()
    for i=0, span -1{
	if j<(num_spike-1){
	    if((spiketiming.x[j]*1000<=time_vec.get(i))&((spiketiming.x[j+1]*1000>time_vec.get(i)){
		stim_flg.set(i,1)
		j +=1
	    }
	}
    }
    flg = 0
    stim_on = 0
    for i=0, span-1{
	if(stim_flg[i]==1){
	    stim_on = 1
	}
	if(stim_on == 1){
	    if(flg == 0){
		start_time =time_vec.x[i]
		flg = 1
	    }
	    if(time_vec.get(i) == start_time){
		stim_vec.set(i,0)
	    }else if((time_vec.get(i)-start_time)<=0){
		stim_vec.set(i,-amp)
	    }else if((time_vec.get(i)-start_time)<=length){
		stim_vec.set(i,amp)
	    }else if((time_vec.get(i)-start_time)<=L_RATIO*length){
		stim_vec.set(i,-amp*A_RATIO)
	    }else{
		stim_vec.set(i,0)
		stim_on = 0
		flg = 0
	    }
	}
    }
    return stim_vec
}
